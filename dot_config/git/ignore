# Global Git Ignore File
# Managed by chezmoi - see dot_config/git/ignore.tmpl
#
# This file is automatically recognized by Git when placed at ~/.config/git/ignore
# No additional Git configuration required.

# ==============================================================================
# EDITOR AND IDE TEMPORARY FILES
# ==============================================================================

# Vim
*.swp
*.swo
*~

# Emacs
\#*\#
.\#*

# Nano
*.save
*.swp

# VS Code
.vscode/
*.code-workspace

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-workspace
*.sublime-project

# ==============================================================================
# OPERATING SYSTEM FILES (All platforms for cross-platform compatibility)
# ==============================================================================

# Linux files
*~                          # Backup files
.fuse_hidden*              # FUSE hidden files (when file open but deleted)
.directory                 # KDE directory preferences
.Trash-*                   # Linux trash folders
.nfs*                      # NFS temporary files

# macOS files
.DS_Store                  # Finder metadata
.AppleDouble               # Resource forks
.LSOverride                # Launch Services override
Icon                       # Custom folder icons (note: ends with two \r)
._*                        # Thumbnail cache and metadata
.DocumentRevisions-V100    # Document versioning
.fseventsd                 # File system events
.Spotlight-V100            # Spotlight index
.TemporaryItems            # Temporary items
.Trashes                   # Trash metadata
.VolumeIcon.icns          # Volume icons
.com.apple.timemachine.donotpresent  # Time Machine exclusions
.AppleDB                   # Apple database files
.AppleDesktop             # Apple Desktop files
Network Trash Folder      # Network trash
Temporary Items           # Temporary items on network volumes
.apdisk                   # Apple disk image metadata

# Windows files
Thumbs.db                  # Thumbnail cache
Thumbs.db:encryptable     # Encrypted thumbnail cache
ehthumbs.db               # Vista+ thumbnail cache
ehthumbs_vista.db         # Vista thumbnail cache
*.stackdump               # Cygwin/MinGW crash dumps
[Dd]esktop.ini            # Folder customization
$RECYCLE.BIN/             # Recycle bin
*.cab                     # Cabinet files
*.msi                     # Windows installer
*.msix                    # Modern Windows installer
*.msm                     # Merge modules
*.msp                     # Patch files
*.lnk                     # Shortcuts

# ==============================================================================
# DEVELOPMENT ENVIRONMENT FILES
# ==============================================================================

# direnv
.direnv/
.envrc

# Local environment files (but not .env templates)
.env.local
.env.*.local

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Go
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# Rust
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# ==============================================================================
# DATABASE FILES
# ==============================================================================

*.db
*.sqlite
*.sqlite3

# ==============================================================================
# LOG AND TEMPORARY FILES
# ==============================================================================

*.log
*.tmp
*.temp
logs/
temp/
tmp/

# ==============================================================================
# BACKUP FILES
# ==============================================================================

*.bak
*.backup
*.old
*.orig
*.save

# ==============================================================================
# ARCHIVE FILES
# ==============================================================================

*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z
*.gz
*.bz2
*.xz

# ==============================================================================
# SECURITY SENSITIVE FILES
# ==============================================================================
# Note: These are also covered by the main .gitignore, but included here for completeness

# Private keys
*.pem
*.key
id_rsa
id_dsa
id_ecdsa
id_ed25519

# API keys and tokens
*api_key*
*token*
*secret*
*password*

# ==============================================================================
# MISC
# ==============================================================================

# Thumbnail cache files
._*
.DS_Store?

# Files that might appear on external disk
.Spotlight-V100
.Trashes

# General
*.tmp
*~

# Tags generated by exuberant ctags
tags
TAGS

# cscope files
cscope.out
cscope.in.out
cscope.po.out
cscope.files