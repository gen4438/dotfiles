{{- if eq .chezmoi.os "linux" -}}
{{- $distro := .chezmoi.osRelease.id -}}
{{- if not (eq $distro "termux") -}}
{{ template "shebang-bash.tmpl" . }}
# Install essential packages for Linux distributions

set -e

echo "Installing essential packages for {{ .chezmoi.osRelease.name }}..."

{{- if or (eq $distro "ubuntu") (eq $distro "debian") }}
# Ubuntu/Debian
# Update package lists
sudo apt update

# Install essential packages
sudo apt install -y \
    build-essential \
    curl \
    wget \
    git \
    vim \
    zsh \
    ripgrep \
    fd-find \
    bat \
    direnv \
    xclip \
    jq \
    etckeeper \
    age \
    python3-pip \
    python3-venv \
    golang-go

# Install build environment for pyenv
sudo apt install -y make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev curl git \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

# Install Neovim
sudo add-apt-repository ppa:neovim-ppa/unstable -y
sudo apt install -y neovim

# Install Japanese fonts if GUI or X11 forwarding might be used
if [ -n "$DISPLAY" ] || [ -n "$WAYLAND_DISPLAY" ] || [ -n "$XDG_SESSION_TYPE" ]; then
    echo "GUI support detected, installing Japanese fonts..."
    sudo apt install -y fonts-takao fonts-ipafont fonts-ipaexfont
fi

# GitHub CLI
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y

{{- else if or (eq $distro "almalinux") (eq $distro "rocky") (eq $distro "centos") (eq $distro "rhel") (eq $distro "fedora") }}
# RedHat-based distributions
# Enable EPEL repository for additional packages
{{- if not (eq $distro "fedora") }}
sudo dnf install -y epel-release
{{- end }}

# Update package lists
sudo dnf update -y

# Install essential packages
sudo dnf install -y \
    gcc \
    gcc-c++ \
    make \
    curl \
    wget \
    git \
    vim \
    zsh \
    ripgrep \
    fd-find \
    bat \
    git-delta \
    direnv \
    xclip \
    jq \
    etckeeper \
    age \
    python3-pip \
    python3-virtualenv \
    golang

# Install build environment for pyenv
sudo dnf install -y make gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel tk-devel libffi-devel xz-devel

# Install Neovim
sudo dnf install -y neovim

# Install Japanese fonts if GUI or X11 forwarding might be used
if [ -n "$DISPLAY" ] || [ -n "$WAYLAND_DISPLAY" ] || [ -n "$XDG_SESSION_TYPE" ]; then
    echo "GUI support detected, installing Japanese fonts..."
    sudo dnf install -y google-noto-sans-cjk-jp-fonts google-noto-serif-cjk-jp-fonts
fi

# GitHub CLI
sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
sudo dnf install -y gh

{{- else if or (eq $distro "arch") (eq $distro "manjaro") }}
# Arch-based distributions
# Update package database
sudo pacman -Syu --noconfirm

# Install essential packages
sudo pacman -S --noconfirm \
    base-devel \
    curl \
    wget \
    git \
    vim \
    zsh \
    ripgrep \
    fd \
    bat \
    git-delta \
    direnv \
    xclip \
    jq \
    etckeeper \
    age \
    python-pip \
    python-virtualenv \
    go

# Install build environment for pyenv
sudo pacman -S --noconfirm base-devel openssl zlib xz tk

# Install Neovim
sudo pacman -S --noconfirm neovim

# Install Japanese fonts if GUI or X11 forwarding might be used
if [ -n "$DISPLAY" ] || [ -n "$WAYLAND_DISPLAY" ] || [ -n "$XDG_SESSION_TYPE" ]; then
    echo "GUI support detected, installing Japanese fonts..."
    sudo pacman -S --noconfirm noto-fonts-cjk
fi

# GitHub CLI
sudo pacman -S --noconfirm github-cli

{{- else }}
echo "Warning: Unsupported distribution '{{ $distro }}'. Skipping package installation."
echo "Please install packages manually."
exit 0
{{- end }}

# Install oh-my-zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    echo "Installing oh-my-zsh..."
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi

echo "âœ… Essential packages installed successfully"
{{- end }}
{{- end }}