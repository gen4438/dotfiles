#!/bin/bash
# Setup Neovim Python and Node.js environments
# This script runs once to set up Neovim-specific dependencies

set -e

echo "🔧 Setting up Neovim environment..."

# Setup Python environment for Neovim
if command -v pyenv >/dev/null 2>&1; then
    echo "🐍 Setting up Python environment for Neovim..."
    
    # Initialize pyenv
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    
    # Get latest Python version
    LATEST_PYTHON=$(pyenv install --list | grep -E "^\s*3\.[0-9]+\.[0-9]+$" | tail -1 | xargs)
    
    if [[ -n "$LATEST_PYTHON" ]]; then
        # Ensure Python is installed
        pyenv install -s "$LATEST_PYTHON"
        
        # Create virtual environment for Neovim if it doesn't exist
        if ! pyenv versions | grep -q "neovim3"; then
            echo "Creating Python virtual environment for Neovim..."
            pyenv virtualenv "$LATEST_PYTHON" neovim3
        fi
        
        # Install Neovim Python packages
        echo "Installing Python packages for Neovim..."
        pyenv activate neovim3
        pip install --upgrade pip
        pip install --upgrade neovim coverage pynvim
        
        # Get Python path for Neovim config
        PYTHON_PATH=$(pyenv which python)
        echo "✅ Neovim Python environment created at: $PYTHON_PATH"
        
        # Deactivate virtual environment
        pyenv deactivate
    fi
elif command -v python3 >/dev/null 2>&1; then
    echo "⚠️  pyenv not found, using system Python..."
    # Install packages globally (not recommended but fallback)
    python3 -m pip install --user --upgrade neovim pynvim
fi

# Setup Node.js environment for Neovim
if [[ -d "$HOME/.nvm" ]]; then
    echo "📦 Setting up Node.js environment for Neovim..."
    
    # Initialize nvm
    export NVM_DIR="$HOME/.nvm"
    [[ -s "$NVM_DIR/nvm.sh" ]] && \. "$NVM_DIR/nvm.sh"
    
    if command -v nvm >/dev/null 2>&1; then
        # Use LTS version
        nvm use --lts
        
        # Install Neovim Node.js package
        echo "Installing Node.js packages for Neovim..."
        npm install -g neovim
        
        echo "✅ Neovim Node.js package installed"
    fi
elif command -v npm >/dev/null 2>&1; then
    echo "⚠️  nvm not found, using system npm..."
    # Install globally with system npm
    npm install -g neovim
fi

# Install Neovim providers health check
if command -v nvim >/dev/null 2>&1; then
    echo "🏥 Checking Neovim providers..."
    
    # Create a temporary vimrc to suppress warnings during health check
    TEMP_VIMRC=$(mktemp)
    echo "set noloadplugins" > "$TEMP_VIMRC"
    
    # Run health check for providers
    nvim -u "$TEMP_VIMRC" --headless "+checkhealth provider" "+qa" 2>&1 | grep -E "(python3|node|OK|WARNING|ERROR)" || true
    
    rm -f "$TEMP_VIMRC"
fi

echo "✅ Neovim environment setup completed"