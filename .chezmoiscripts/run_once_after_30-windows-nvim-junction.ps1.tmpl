{{- if eq .chezmoi.os "windows" -}}
# Create junction for Neovim config on Windows
# This allows using the same ~/.config/nvim path on Windows as on Linux/macOS

$ErrorActionPreference = "Stop"

Write-Host "Setting up Neovim configuration junction for Windows..."

$nvimConfigDir = "$env:LOCALAPPDATA\nvim"
$unixStyleConfigDir = "$env:USERPROFILE\.config\nvim"

# Check if the Unix-style config directory exists
if (Test-Path $unixStyleConfigDir) {
    # Check if junction already exists
    if (Test-Path $nvimConfigDir) {
        $item = Get-Item $nvimConfigDir
        if ($item.LinkType -eq "Junction") {
            Write-Host "✅ Neovim config junction already exists"
        } else {
            Write-Warning "❌ $nvimConfigDir exists but is not a junction. Please remove it manually and re-run chezmoi apply."
        }
    } else {
        try {
            # Create the junction
            New-Item -Path $nvimConfigDir -ItemType Junction -Value $unixStyleConfigDir
            Write-Host "✅ Created Neovim config junction: $nvimConfigDir -> $unixStyleConfigDir"
        } catch {
            Write-Error "❌ Failed to create Neovim config junction: $_"
        }
    }
} else {
    Write-Host "⏳ Unix-style config directory not found yet. Junction will be created after chezmoi applies the config files."
}

Write-Host "✅ Windows Neovim configuration setup completed"
{{- end }}