# Zsh configuration
# Managed by chezmoi - see dot_zshrc.tmpl

# Performance profiling - uncomment to measure startup time
# zmodload zsh/zprof

# Oh-My-Zsh performance optimizations - disable unnecessary features
export DISABLE_AUTO_UPDATE="true"
export DISABLE_MAGIC_FUNCTIONS="true"
export DISABLE_COMPFIX="true"
export DISABLE_UNTRACKED_FILES_DIRTY="true"

# Set byobu config directory to XDG compliant location
export BYOBU_CONFIG_DIR="$HOME/.config/byobu"

# Fix dotenv plugin cache directory issue
export ZSH_CACHE_DIR="$HOME/.zsh_cache"
mkdir -p "$ZSH_CACHE_DIR"

# Completion system - initialize FIRST to support plugins that use compdef
fpath+=~/.zfunc
autoload -Uz compinit
compinit

# Plugin management - Zim (high-performance zsh plugin manager)
# Platform-specific Zim initialization
{{- if eq .chezmoi.os "darwin" }}
# macOS: Use Homebrew-installed Zim
ZIM_HOME=~/.zim

# Determine Homebrew prefix
if [[ -d "/opt/homebrew" ]]; then
    # Apple Silicon
    ZIMFW_PATH="/opt/homebrew/opt/zimfw/share/zimfw.zsh"
else
    # Intel
    ZIMFW_PATH="/usr/local/opt/zimfw/share/zimfw.zsh"
fi

# Install missing modules and update init.zsh if needed
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then 
    if [[ -f "$ZIMFW_PATH" ]]; then
        source "$ZIMFW_PATH" init
    fi
fi

# Initialize modules
if [[ -f ${ZIM_HOME}/init.zsh ]]; then
    source ${ZIM_HOME}/init.zsh
fi
{{- else }}
# Other platforms: Use git-cloned version
if [[ -f "$HOME/.zim/zimfw.zsh" ]]; then
    ZIM_HOME=~/.zim
    # Install missing modules and update init.zsh if needed
    if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
        source "$HOME/.zim/zimfw.zsh" init
    fi
    # Initialize modules
    source ${ZIM_HOME}/init.zsh
fi
{{- end }}

# Optimize autosuggestions performance and usability
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
export ZSH_AUTOSUGGEST_USE_ASYNC=true
export ZSH_AUTOSUGGEST_MANUAL_REBIND=true

# Load common shell configuration (shared with bash) AFTER plugin initialization
# This ensures plugin widgets are available for custom keybindings
{{ template "shell_common.tmpl" . }}



# Zsh-specific settings
setopt AUTO_CD              # Change directory by typing directory name
setopt AUTO_PUSHD           # Push directories to stack
setopt PUSHD_IGNORE_DUPS    # Don't push duplicate directories
setopt EXTENDED_HISTORY     # Write the history file in the ':start:elapsed;command' format
setopt SHARE_HISTORY        # Share history between all sessions
setopt HIST_REDUCE_BLANKS   # Remove superfluous blanks from each command line
setopt HIST_IGNORE_ALL_DUPS # Delete an old recorded event if a new event is a duplicate
setopt HIST_SAVE_NO_DUPS    # Don't write a duplicate event to the history file
setopt HIST_VERIFY          # Don't execute immediately upon history expansion
setopt APPEND_HISTORY       # Append to history file
setopt INC_APPEND_HISTORY   # Write to the history file immediately, not when the shell exits
setopt NO_BEEP              # Don't beep on error
setopt CORRECT              # Correct commands
setopt CORRECT_ALL          # Correct all arguments
setopt COMPLETE_IN_WORD     # Complete from both ends of a word
setopt ALWAYS_TO_END        # Move cursor to the end of a completed word
setopt PATH_DIRS            # Perform path search even on command names with slashes
setopt AUTO_MENU            # Show completion menu on a successive tab press
setopt AUTO_LIST            # Automatically list choices on ambiguous completion
setopt AUTO_PARAM_SLASH     # If completed parameter is a directory, add a trailing slash

# History search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

# Zsh-specific aliases
alias reload='source ~/.zshrc'
alias zshconfig='${EDITOR:-vim} ~/.zshrc'

# fzf integration for zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf configuration is now handled in shell_common.tmpl

# fzf-tab configuration
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath 2>/dev/null || ls -1 --color=always $realpath'
# preview file content for various commands
zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath} 2>/dev/null || file ${(Q)realpath}'


# Load local zsh configuration if exists
if [ -f "$HOME/.zshrc_local" ]; then
    source "$HOME/.zshrc_local"
fi

# Prompt configuration handled by byobu when in tmux session
# See ~/.config/byobu/prompt for byobu-specific prompt settings

# Load byobu prompt if available
[ -r "$BYOBU_CONFIG_DIR/prompt" ] && . "$BYOBU_CONFIG_DIR/prompt"

# Override oh-my-zsh completion settings (must be at end)
setopt GLOB_DOTS
zstyle ':completion:*' menu select=0  # Show list on first tab, select on second tab
zstyle ':completion:*' special-dirs false
zstyle ':completion:*:*:*:*:*' file-patterns '*:all-files' '.*:hidden-files'

# Add vi mode indicator and environment info to prompt
# Vi mode indicator is handled here for consistency (not in byobu prompt)
export PROMPT='$(vi_mode_prompt_info)$(show_virtual_env)$(show_nvm_version)'"${PROMPT//$'\n'/}"

# Performance profiling results - uncomment to show profiling data
# zprof

# Key bindings are handled by dot_zsh/keybindings.d/keybindings
# This ensures proper loading order and prevents conflicts