# Zsh configuration
# Managed by chezmoi - see dot_zshrc.tmpl

# Set byobu config directory to XDG compliant location
export BYOBU_CONFIG_DIR="$HOME/.config/byobu"

# Plugin management - platform-appropriate zplug detection
{{- if eq .chezmoi.os "darwin" }}
# macOS - check Homebrew locations first, then local (chezmoi external backup)
for zplug_path in \
    "/opt/homebrew/opt/zplug" \
    "/usr/local/opt/zplug" \
    "/opt/homebrew/share/zplug" \
    "/usr/local/share/zplug" \
    "$HOME/.zplug"; do
    if [[ -f "$zplug_path/init.zsh" ]]; then
        export ZPLUG_HOME="$zplug_path"
        source "$zplug_path/init.zsh"
        break
    fi
done
{{- else }}
# Linux/Android/other - chezmoi external manages zplug at ~/.zplug
if [[ -f "$HOME/.zplug/init.zsh" ]]; then
    export ZPLUG_HOME="$HOME/.zplug"
    source "$HOME/.zplug/init.zsh"
fi
{{- end }}

# Load zplug plugins if available
if command -v zplug &> /dev/null; then
    # Use modern zstyle instead of deprecated ZPLUG_SHALLOW
    zstyle ':zplug:tag' depth 1
    # oh-my-zsh plugins
    zplug "lib/completion", from:oh-my-zsh
    zplug "lib/directories", from:oh-my-zsh
    zplug "lib/functions", from:oh-my-zsh
    zplug "lib/history", from:oh-my-zsh
    zplug "plugins/git", from:oh-my-zsh
    zplug "plugins/dotenv", from:oh-my-zsh
    zplug "plugins/poetry", from:oh-my-zsh
    zplug "plugins/npm", from:oh-my-zsh
    zplug "plugins/kubectl", from:oh-my-zsh
    zplug "plugins/gh", from:oh-my-zsh
    zplug "plugins/vi-mode", from:oh-my-zsh


    # Other plugins
    zplug "mafredri/zsh-async", from:github
    zplug "zsh-users/zsh-history-substring-search", defer:2
    zplug "changyuheng/fz", defer:1
    zplug "rupa/z", use:z.sh
    zplug "greymd/tmux-xpanes"
    zplug "qoomon/zsh-lazyload"

    # Completion - initialize BEFORE loading plugins to prevent conflicts
    fpath+=~/.zfunc
    autoload -Uz compinit && compinit -C
    

    # Install plugins if there are plugins that have not been installed
    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi

    # Load plugins
    zplug load
fi

# Load common shell configuration (shared with bash)
# This includes modular loading of aliases, functions, completions, and keybindings
{{ template "shell_common.tmpl" . }}

# Zsh-specific settings
setopt AUTO_CD              # Change directory by typing directory name
setopt AUTO_PUSHD           # Push directories to stack
setopt PUSHD_IGNORE_DUPS    # Don't push duplicate directories
setopt EXTENDED_HISTORY     # Write the history file in the ':start:elapsed;command' format
setopt SHARE_HISTORY        # Share history between all sessions
setopt HIST_REDUCE_BLANKS   # Remove superfluous blanks from each command line
setopt HIST_IGNORE_ALL_DUPS # Delete an old recorded event if a new event is a duplicate
setopt HIST_SAVE_NO_DUPS    # Don't write a duplicate event to the history file
setopt HIST_VERIFY          # Don't execute immediately upon history expansion
setopt APPEND_HISTORY       # Append to history file
setopt INC_APPEND_HISTORY   # Write to the history file immediately, not when the shell exits
setopt NO_BEEP              # Don't beep on error
setopt CORRECT              # Correct commands
setopt CORRECT_ALL          # Correct all arguments
setopt COMPLETE_IN_WORD     # Complete from both ends of a word
setopt ALWAYS_TO_END        # Move cursor to the end of a completed word
setopt PATH_DIRS            # Perform path search even on command names with slashes
setopt AUTO_MENU            # Show completion menu on a successive tab press
setopt AUTO_LIST            # Automatically list choices on ambiguous completion
setopt AUTO_PARAM_SLASH     # If completed parameter is a directory, add a trailing slash

# History search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

# Zsh-specific aliases
alias reload='source ~/.zshrc'
alias zshconfig='${EDITOR:-vim} ~/.zshrc'

# fzf integration for zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Custom fzf options
if type "rg" > /dev/null 2>&1; then
  export FZF_DEFAULT_OPTS='--bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-y:toggle-all,ctrl-s:toggle-sort'
  export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git/*'"
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi


# Load local zsh configuration if exists
if [ -f "$HOME/.zshrc_local" ]; then
    source "$HOME/.zshrc_local"
fi

# Prompt configuration handled by byobu when in tmux session
# See ~/.config/byobu/prompt for byobu-specific prompt settings

# Load byobu prompt if available
[ -r "$BYOBU_CONFIG_DIR/prompt" ] && . "$BYOBU_CONFIG_DIR/prompt"

# Override oh-my-zsh completion settings (must be at end)
setopt GLOB_DOTS
zstyle ':completion:*' menu select=0  # Show list on first tab, select on second tab
zstyle ':completion:*' special-dirs false
zstyle ':completion:*:*:*:*:*' file-patterns '*:all-files' '.*:hidden-files'

# Add vi mode to existing prompt when not using byobu
if [[ -z "$BYOBU_BACKEND" ]]; then
  # Remove newlines from existing prompt and prepend vi mode indicator  
  export PROMPT='$(vi_mode_prompt_info)'"${PROMPT//$'\n'/}"
fi